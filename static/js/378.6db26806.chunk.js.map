{"version":3,"file":"static/js/378.6db26806.chunk.js","mappings":"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","sources":["pages/LoginPage/LoginPage.tsx","pages/LoginPage/schema.ts","utils/firebase.ts"],"sourcesContent":["import { useState } from \"react\";\r\nimport { Link, Navigate } from \"react-router-dom\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nimport { signInWithEmailAndPassword, UserCredential } from \"firebase/auth\";\r\nimport { useAppDispatch, useAppSelector } from \"../../hooks/redux-hooks\";\r\nimport { auth } from \"../../utils/firebase\";\r\nimport { setAuthData } from \"../../store/auth/authSlice\";\r\nimport { schema } from \"./schema\";\r\n\r\nimport backgroundImg from \"../../assets/login.jpg\";\r\n\r\ninterface IFormInputs {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nexport default function LoginPage() {\r\n  const dispatch = useAppDispatch();\r\n  const token = useAppSelector((state) => state.auth.token);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string>(\"\");\r\n\r\n  const handleLogIn = async (email: string, password: string) => {\r\n    try {\r\n      const { user }: UserCredential = await signInWithEmailAndPassword(\r\n        auth,\r\n        email,\r\n        password\r\n      );\r\n      const userToken = user.refreshToken;\r\n      const userEmail = user.email;\r\n      dispatch(setAuthData({ userToken, userEmail }));\r\n    } catch (error) {\r\n      setError(`⚠ ${\"errors.incorrectCredentials\"}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<IFormInputs>({ resolver: yupResolver(schema) });\r\n  const onSubmit = (data: IFormInputs) => {\r\n    setError(\"\");\r\n    setLoading(true);\r\n    handleLogIn(data.email, data.password);\r\n  };\r\n\r\n  if (token) {\r\n    return <Navigate to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <Grid container component=\"main\" sx={{ height: \"calc(100vh - 108px)\" }}>\r\n      <Grid\r\n        item\r\n        xs={false}\r\n        sm={4}\r\n        md={7}\r\n        sx={{\r\n          backgroundImage: `url(${backgroundImg})`,\r\n          backgroundRepeat: \"no-repeat\",\r\n          backgroundSize: \"cover\",\r\n          backgroundPosition: \"center\",\r\n        }}\r\n      />\r\n      <Grid item xs={12} sm={8} md={5}>\r\n        <Box\r\n          sx={{\r\n            my: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}>\r\n          <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign In\r\n          </Typography>\r\n          <Box\r\n            component=\"form\"\r\n            noValidate\r\n            onSubmit={handleSubmit(onSubmit)}\r\n            sx={{ mt: 1, width: \"270px\" }}>\r\n            <TextField\r\n              id=\"email\"\r\n              {...register(\"email\")}\r\n              margin=\"normal\"\r\n              fullWidth\r\n              label=\"Email\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n            />\r\n            <Typography\r\n              component=\"p\"\r\n              sx={{ color: \"red\", fontSize: 14, margin: \"5px 0\" }}>\r\n              {errors.email?.message ? errors.email?.message : \" \"}\r\n            </Typography>\r\n            <TextField\r\n              id=\"password\"\r\n              {...register(\"password\")}\r\n              margin=\"normal\"\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              autoComplete=\"current-password\"\r\n            />\r\n            <Typography\r\n              component=\"p\"\r\n              sx={{ color: \"red\", fontSize: 14, margin: \"5px 0\" }}>\r\n              {errors.password?.message ? errors.password?.message : \" \"}\r\n            </Typography>\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember\"\r\n            />\r\n            <Typography component=\"p\" sx={{ color: \"red\", fontSize: 14 }}>\r\n              {error || \"\"}\r\n            </Typography>\r\n            <LoadingButton\r\n              type=\"submit\"\r\n              loading={loading}\r\n              loadingIndicator=\"Loading…\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}>\r\n              <span>Sign In</span>\r\n            </LoadingButton>\r\n            <Grid container justifyContent=\"center\">\r\n              <Grid item>\r\n                <Link to=\"/register\">New to the App? Sign Up!</Link>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import * as yup from 'yup';\r\n\r\nexport const schema = yup.object({\r\n  email: yup\r\n    .string()\r\n    .email('⚠ Invalid email')\r\n    .required('⚠ This field is required'),\r\n  password: yup\r\n    .string()\r\n    .required('⚠ This field is required')\r\n    .min(8, '⚠ Min length - 8 chars'),\r\n});\r\n","import { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyC_lE0668hwlYXylLiPMPNLaXMvLYEaKTw\",\r\n  authDomain: \"alterego-test.firebaseapp.com\",\r\n  projectId: \"alterego-test\",\r\n  storageBucket: \"alterego-test.appspot.com\",\r\n  messagingSenderId: \"373581046067\",\r\n  appId: \"1:373581046067:web:6bf2251b42e6a36bd7de46\",\r\n};\r\n\r\nconst firebaseSetup = initializeApp(firebaseConfig);\r\n\r\nexport const auth = getAuth(firebaseSetup);\r\nexport default firebaseSetup;\r\n"],"names":["LoginPage","_errors$email","_errors$email2","_errors$password","_errors$password2","dispatch","useAppDispatch","token","useAppSelector","state","auth","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","handleLogIn","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","email","password","_yield$signInWithEmai","user","userToken","userEmail","wrap","_context","prev","next","signInWithEmailAndPassword","sent","refreshToken","setAuthData","t0","concat","finish","stop","_x","_x2","apply","arguments","_useForm","useForm","resolver","yupResolver","schema","register","handleSubmit","errors","formState","_jsx","Navigate","to","_jsxs","Grid","container","component","sx","height","children","item","xs","sm","md","backgroundImage","backgroundImg","backgroundRepeat","backgroundSize","backgroundPosition","Box","my","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlinedIcon","Typography","variant","noValidate","onSubmit","data","mt","width","TextField","_objectSpread","id","margin","fullWidth","label","name","autoComplete","autoFocus","color","fontSize","message","type","FormControlLabel","control","Checkbox","value","LoadingButton","loadingIndicator","mb","justifyContent","Link","yup","required","min","firebaseSetup","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getAuth"],"sourceRoot":""}